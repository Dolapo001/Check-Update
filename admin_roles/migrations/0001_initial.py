# Generated by Django 5.2.4 on 2025-08-27 20:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AdminUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "is_suspended",
                    models.BooleanField(default=False, verbose_name="Suspended Status"),
                ),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Last Login IP"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Phone Number"
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC", max_length=50, verbose_name="Timezone"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Admin User",
                "verbose_name_plural": "Admin Users",
                "permissions": [
                    ("can_suspend_user", "Can suspend users"),
                    ("can_activate_user", "Can activate users"),
                    ("can_manage_roles", "Can manage user roles"),
                ],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="AdBanner",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, db_index=True, null=True),
                ),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
                ("name", models.CharField(max_length=100, verbose_name="Banner Name")),
                (
                    "image",
                    models.ImageField(upload_to="ads/", verbose_name="Banner Image"),
                ),
                ("url", models.URLField(verbose_name="Target URL")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Active Status"),
                ),
                ("start_date", models.DateField(verbose_name="Start Date")),
                ("end_date", models.DateField(verbose_name="End Date")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ad Banner",
                "verbose_name_plural": "Ad Banners",
                "permissions": [("can_manage_ads", "Can manage advertisement banners")],
            },
        ),
        migrations.CreateModel(
            name="AdminActionLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, db_index=True, null=True),
                ),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "Created"),
                            ("update", "Updated"),
                            ("delete", "Deleted"),
                            ("publish", "Published"),
                            ("approve", "Approved"),
                            ("suspend", "Suspended"),
                            ("activate", "Activated"),
                            ("login", "Logged in"),
                            ("logout", "Logged out"),
                        ],
                        max_length=20,
                        verbose_name="Action",
                    ),
                ),
                ("model", models.CharField(max_length=100, verbose_name="Model")),
                (
                    "object_id",
                    models.CharField(
                        max_length=100, null=True, verbose_name="Object ID"
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Timestamp"),
                ),
                ("ip_address", models.GenericIPAddressField(verbose_name="IP Address")),
                (
                    "details",
                    models.TextField(blank=True, verbose_name="Action Details"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="adminuser_groups",
                        related_query_name="adminuser",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="adminuser_permissions",
                        related_query_name="adminuser",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Action Log",
                "verbose_name_plural": "Action Logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Content",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, db_index=True, null=True),
                ),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                ("content", models.TextField(verbose_name="Content")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("approved", "Approved"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "publish_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Publish Date"
                    ),
                ),
                (
                    "region_restrictions",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Region Restrictions"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contents",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Author",
                    ),
                ),
            ],
            options={
                "verbose_name": "Content",
                "verbose_name_plural": "Contents",
                "permissions": [
                    ("can_approve_content", "Can approve content"),
                    ("can_publish_content", "Can publish content"),
                    ("can_schedule_content", "Can schedule content publishing"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, db_index=True, null=True),
                ),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
                ("author", models.CharField(max_length=100, verbose_name="Author")),
                ("text", models.TextField(verbose_name="Comment Text")),
                (
                    "is_approved",
                    models.BooleanField(default=False, verbose_name="Approved Status"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "flagged",
                    models.BooleanField(default=False, verbose_name="Flagged Status"),
                ),
                (
                    "content",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="admin_roles.content",
                        verbose_name="Content",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment",
                "verbose_name_plural": "Comments",
                "permissions": [("can_moderate_comments", "Can moderate comments")],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, db_index=True, null=True),
                ),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("admin", "Administrator"),
                            ("editor", "Editor"),
                            ("writer", "Writer"),
                            ("contributor", "Contributor"),
                            ("moderator", "Moderator"),
                            ("seo_analyst", "SEO Analyst"),
                            ("ad_manager", "Ad Manager"),
                        ],
                        max_length=50,
                        unique=True,
                        verbose_name="Role Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Role Description"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Active Status"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="roles",
                        to="auth.permission",
                        verbose_name="Permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Admin Role",
                "verbose_name_plural": "Admin Roles",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="adminuser",
            name="role",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="users",
                to="admin_roles.role",
                verbose_name="System Role",
            ),
        ),
        migrations.CreateModel(
            name="SEOData",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, db_index=True, null=True),
                ),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "meta_title",
                    models.CharField(max_length=100, verbose_name="Meta Title"),
                ),
                ("meta_description", models.TextField(verbose_name="Meta Description")),
                ("keywords", models.CharField(max_length=255, verbose_name="Keywords")),
                (
                    "canonical_url",
                    models.URLField(blank=True, verbose_name="Canonical URL"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seo_data",
                        to="admin_roles.content",
                        verbose_name="Content",
                    ),
                ),
            ],
            options={
                "verbose_name": "SEO Data",
                "verbose_name_plural": "SEO Data",
                "permissions": [("can_manage_seo", "Can manage SEO data")],
            },
        ),
    ]
